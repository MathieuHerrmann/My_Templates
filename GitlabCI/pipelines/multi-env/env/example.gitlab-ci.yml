###############################################################################
############################## INCLUDE #######################################
###############################################################################

# include:
#   - project: "" # Change this path to fetch all base template that you need in you final pipeline
#     ref: main
#     file: # Import base that you needs in you final pipeline
#     - '/GitlabCI/base/base_terraform.gitlab-ci.yml'
#     - '/GitlabCI/base/node_base.gitlab-ci.yml'

include:
  - local: '/GitlabCI/base/base_terraform.gitlab-ci.yml'
  - local: '/GitlabCI/base/node_base.gitlab-ci.yml'

###############################################################################
######################## YAML ANCHOR DEFINITION ###############################
###############################################################################

.pre_script_env_common: &pre_script_env_common
  - echo "job_name is $CI_JOB_NAME"

.example_setup: &example_setup
  variables:
    ENV: "example"
  stage: example
  rules: # Change the rules to fit with the trigger pipline that you want
    - if: $CI_PIPELINE_SOURCE == "push" &&  $CI_COMMIT_BRANCH == "main" # trigger to every push on main

###############################################################################
############################## JOBS CALL #######################################
###############################################################################


example:terraform:init:
  <<: *example_setup
  extends: .terraform:init
  before_script:
    - !reference [.terraform:init, before_script]
    - *pre_script_env_common

example:node:test:
  extends: .node:test
  <<: *example_setup
  before_script:
    - !reference [.node:test, before_script]
    - *pre_script_env_common

example:node:build:
  extends: .node:build
  <<: *example_setup
  needs: ["example:node:test"]
  before_script:
    - !reference [.node:build, before_script]
    - export NODE_ENV="development"
    - *pre_script_env_common

example:terraform:fmt:
  <<: *example_setup
  extends: .terraform:fmt
  needs: ["example:terraform:init"]
  before_script:
    - !reference [.terraform:fmt, before_script]
    - *pre_script_env_common

example:terraform:validate:
  <<: *example_setup
  extends: .terraform:validate
  needs: ["example:terraform:init"]
  before_script:
    - !reference [.terraform:validate, before_script]
    - *pre_script_env_common

example:terraform:plan:
  <<: *example_setup
  extends: .terraform:plan
  needs: ["example:terraform:validate", "example:terraform:fmt", "example:node:build"]
  before_script:
    - !reference [.terraform:plan, before_script]
    - *pre_script_env_common

example:terraform:apply:
  <<: *example_setup
  extends: .terraform:apply
  needs: ["example:terraform:plan", "example:node:build"]
  before_script:
    - !reference [.terraform:apply, before_script]
    - *pre_script_env_common

# example:other:cache_invalidation:
#   <<: *example_setup
#   extends: .other:cache_invalidation
#   needs: ["example:terraform:apply"]
#   before_script:
#     - *pre_script_env_common

example:terraform:destroy:
  extends: .terraform:destroy
  <<: *example_setup
  before_script:
    - !reference [.terraform:destroy, before_script]
    - *pre_script_env_common
